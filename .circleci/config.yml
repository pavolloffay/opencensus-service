version: 2.1

references:
  workspace_root: &workspace_root
    /tmp/workspace

executors:
  gradle_docker:
    docker:
      - image: circleci/openjdk:11-jdk
  golang_docker:
    docker:
      - image: circleci/golang:1.12
  helm:
    docker:
    - image: $DOCKER_REGISTRY/ai.traceable.build/helm-packager:0.1.0
      auth:
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD
  deployer:
    docker:
    - image: circleci/openjdk:11-jdk
    resource_class: small

commands:
  setup_build_environment:
    steps:
      - checkout
      - attach_workspace:
          at: *workspace_root

jobs:
  build:
    executor: golang_docker
    resource_class: large
    steps:
      - run: sudo apt-get update && sudo apt-get install -y bzr
      - setup_build_environment
      - add_ssh_keys:
          fingerprints:
            - "f8:97:3f:f7:78:04:12:8c:16:01:c9:65:9b:db:62:91" # iam repo
      - run: git config --global url."git@github.com:".insteadOf "https://github.com/"
      - run: make install-tools
      - run: make test
      - run: make collector
      - run: cp -v ./bin/occollector_linux /tmp/workspace
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - occollector_linux

  publish:
    executor: gradle_docker
    steps:
      - add_ssh_keys: &ssh-fingerprint
          fingerprints:
            - "9b:ec:1d:cd:4d:46:f9:2d:b7:7a:80:6d:16:ca:e1:4d"
      - setup_build_environment
      - setup_remote_docker
      - run: cp -v /tmp/workspace/occollector_linux ./cmd/occollector/
      - run: ./gradlew :tag -Prelease
      - run: ./gradlew dockerPushImage
      - run: git push origin $(./gradlew -q :printVersion)

  validate-charts:
    executor: helm
    steps:
    - checkout
    - run:
        name: Helm Charts Lint and Template Render
        command: |
          helm lint --strict ./helm/
          helm template ./helm/
  package-charts:
    executor: helm
    steps:
    - checkout
    - run:
        name: Package and Publish Helm Charts
        # Read the "name:" from Chart.yaml. The chart version is <chart-name>-<semver git tag>
        command: |
          helm package --version $(git describe --abbrev=0) --app-version $(git describe --abbrev=0) ./helm/
          helm push-artifactory $(awk '/name:/ {print $2}' ./helm/Chart.yaml)-$(git describe --abbrev=0).tgz https://traceableai.jfrog.io/traceableai/helm --username $DOCKER_USERNAME --password $DOCKER_PASSWORD --skip-reindex
  deploy:
    executor: deployer
    steps:
    - checkout
    - run:
        name: Deploy Published Helm Charts
        command: |
          curl -u "$CIRCLE_API_TOKEN:" -X POST --header "Content-Type: application/json" -d "{\"branch\": \"develop\", \"parameters\": {\"deploy-service\": true,\"chart-name\": \"$(awk '/name:/ {print $2}' ./helm/Chart.yaml)\",\"chart-version\":\"$(git describe --abbrev=0)\"}}" https://circleci.com/api/v2/project/github/Traceableai/e2e-setup/pipeline

workflows:
  version: 2
  build-and-publish:
    jobs:
      - build:
          context: ci-credentials
      - validate-charts:
          context: continuous_deployment
      - publish:
          context: ci-credentials
          requires:
            - build
            - validate-charts
          filters:
            branches:
              only:
                - master
      - package-charts:
          context: continuous_deployment
          requires:
          - publish
          filters:
            branches:
              only:
              - master
      - deploy:
         context: continuous_deployment
         requires:
         - package-charts
         filters:
           branches:
             only:
             - master
